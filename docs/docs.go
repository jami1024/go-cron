// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "jami1024",
            "url": "https://github.com/jami1024/go-cron",
            "email": "996013797@qq.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/tasks/delete": {
            "post": {
                "description": "删除定时任务",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "删除定时任务",
                "parameters": [
                    {
                        "description": "请示参数data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Task"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "请求成功",
                        "schema": {
                            "$ref": "#/definitions/web.Result"
                        }
                    },
                    "400": {
                        "description": "请求错误",
                        "schema": {
                            "$ref": "#/definitions/web.Result"
                        }
                    },
                    "500": {
                        "description": "内部错误",
                        "schema": {
                            "$ref": "#/definitions/web.Result"
                        }
                    }
                }
            }
        },
        "/tasks/list": {
            "get": {
                "description": "获取定时任务列表",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "获取定时任务列表",
                "parameters": [
                    {
                        "type": "string",
                        "description": "zk",
                        "name": "zk",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "请求成功",
                        "schema": {
                            "$ref": "#/definitions/web.Result"
                        }
                    },
                    "400": {
                        "description": "请求错误",
                        "schema": {
                            "$ref": "#/definitions/web.Result"
                        }
                    },
                    "500": {
                        "description": "内部错误",
                        "schema": {
                            "$ref": "#/definitions/web.Result"
                        }
                    }
                }
            }
        },
        "/tasks/save": {
            "post": {
                "description": "编辑定时任务",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "编辑定时任务",
                "parameters": [
                    {
                        "description": "请示参数data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.Task"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "请求成功",
                        "schema": {
                            "$ref": "#/definitions/web.Result"
                        }
                    },
                    "400": {
                        "description": "请求错误",
                        "schema": {
                            "$ref": "#/definitions/web.Result"
                        }
                    },
                    "500": {
                        "description": "内部错误",
                        "schema": {
                            "$ref": "#/definitions/web.Result"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.Task": {
            "type": "object",
            "required": [
                "command",
                "cronExpr",
                "name"
            ],
            "properties": {
                "command": {
                    "description": "shell命令",
                    "type": "string"
                },
                "cronExpr": {
                    "description": "cron表达式",
                    "type": "string"
                },
                "name": {
                    "description": "任务名",
                    "type": "string"
                },
                "uniqueCode": {
                    "description": "用来拼接任务名称保证任务唯一，用户不用关注、程序自身赋值。",
                    "type": "string"
                },
                "zk": {
                    "description": "用来表示哪个中控，或者理解成不同时区的集群，其中cron表达式要根据zk来写",
                    "type": "string"
                }
            }
        },
        "web.Result": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "这个叫做业务错误码",
                    "type": "integer"
                },
                "data": {},
                "msg": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "127.0.0.1:8181",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "go-cron api",
	Description:      "go-cron api",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
